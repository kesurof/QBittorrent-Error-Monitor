#!/bin/bash

# Script d'installation QBittorrent Monitor (Docker)
# Usage: curl -sSL https://raw.githubusercontent.com/kesurof/QBittorrent-Error-Monitor/main/install-manual.sh | bash

set -euo pipefail

# Couleurs
readonly GREEN='\033[0;32m'
readonly BLUE='\033[0;34m'
readonly YELLOW='\033[1;33m'
readonly RED='\033[0;31m'
readonly NC='\033[0m'

log_info() { echo -e "${GREEN}‚úÖ $1${NC}"; }
log_step() { echo -e "${BLUE}üîß $1${NC}"; }
log_warn() { echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"; }
log_error() { echo -e "${RED}‚ùå $1${NC}"; }

show_banner() {
    echo -e "${BLUE}"
    cat << 'EOF'
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë            QBittorrent Monitor - Installation Docker            ‚ïë
‚ïë                       Image GHCR                                ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
    echo -e "${NC}"
}

check_requirements() {
    log_step "V√©rification des pr√©requis"
    
    # V√©rifier Docker
    if ! command -v docker &> /dev/null; then
        log_error "Docker n'est pas install√©"
        exit 1
    fi
    
    # V√©rifier docker-compose
    if ! command -v docker-compose &> /dev/null; then
        log_error "docker-compose n'est pas install√©"
        exit 1
    fi
    
    # Variables d'environnement par d√©faut
    if [[ -z "${USERDIR:-}" ]]; then
        export USERDIR="$HOME/docker"
        log_info "Utilisation du r√©pertoire: $USERDIR"
    fi
    
    if [[ -z "${PUID:-}" ]]; then
        export PUID=$(id -u)
    fi
    
    if [[ -z "${PGID:-}" ]]; then
        export PGID=$(id -g)
    fi
    
    if [[ -z "${TZ:-}" ]]; then
        export TZ="Europe/Paris"
    fi
    
    log_info "Configuration: PUID=$PUID, PGID=$PGID, TZ=$TZ"
    log_info "Pr√©requis valid√©s"
}

download_files() {
    log_step "T√©l√©chargement des fichiers"
    
    # Cr√©er le r√©pertoire de travail
    local work_dir="$USERDIR/qbittorrent-monitor"
    mkdir -p "$work_dir"
    cd "$work_dir"
    
    # T√©l√©charger docker-compose.yml
    log_step "T√©l√©chargement docker-compose.yml"
    curl -sSL -o docker-compose.yml \
        "https://raw.githubusercontent.com/kesurof/QBittorrent-Error-Monitor/main/docker-compose.yml"
    
    # Cr√©er les r√©pertoires de donn√©es
    mkdir -p config logs
    
    # T√©l√©charger la configuration par d√©faut
    log_step "T√©l√©chargement de la configuration"
    curl -sSL -o config/config.yaml \
        "https://raw.githubusercontent.com/kesurof/QBittorrent-Error-Monitor/main/config/config.yaml"
    
    log_info "Fichiers t√©l√©charg√©s dans $work_dir"
}

deploy_service() {
    log_step "D√©ploiement du service"
    
    # Arr√™ter le service existant
    if docker ps -a --format "{{.Names}}" | grep -q "qbittorrent-monitor"; then
        log_step "Arr√™t du service existant"
        docker-compose down || true
    fi
    
    # T√©l√©charger l'image
    log_step "T√©l√©chargement de l'image depuis GitHub Container Registry"
    docker pull ghcr.io/kesurof/qbittorrent-error-monitor/qbittorrent-monitor:latest
    
    # D√©marrer le service
    log_step "D√©marrage du service"
    docker-compose up -d
    
    # V√©rifier le d√©marrage
    sleep 10
    if docker ps --format "{{.Names}}" | grep -q "qbittorrent-monitor"; then
        log_info "Service d√©marr√© avec succ√®s"
    else
        log_error "√âchec du d√©marrage"
        docker-compose logs
        exit 1
    fi
}

show_results() {
    echo ""
    log_info "üéâ QBittorrent Monitor install√© avec succ√®s !"
    echo ""
    echo "üìä Commandes utiles :"
    echo "   cd $USERDIR/qbittorrent-monitor"
    echo "   docker-compose logs -f qbittorrent-monitor"
    echo "   docker-compose restart qbittorrent-monitor"
    echo "   docker exec qbittorrent-monitor python3 /app/qbittorrent-monitor.py --health-check"
    echo ""
    echo "üìÅ Fichiers :"
    echo "   Config: $USERDIR/qbittorrent-monitor/config/config.yaml"
    echo "   Logs: $USERDIR/qbittorrent-monitor/logs/"
    echo "   Compose: $USERDIR/qbittorrent-monitor/docker-compose.yml"
    echo ""
    echo "üåê Health check: http://localhost:8080/health"
    echo ""
}

main() {
    show_banner
    
    check_requirements
    download_files
    deploy_service
    show_results
    
    echo -e "${GREEN}‚úÖ Installation termin√©e !${NC}"
}

# Gestion d'erreur
trap 'log_error "Erreur durant l'installation" && exit 1' ERR

# Ex√©cuter seulement si appel√© directement
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi
